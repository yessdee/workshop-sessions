data:text/plain;charset=us-ascii;base64,I2luY2x1ZGUgPHBhbmVsLmg+CgojZGVmaW5lIE5MSU5FUyAxMAojZGVmaW5lIE5DT0xTIDQwCgp2b2lkIGluaXRfd2lucyhXSU5ET1cgKip3aW5zLCBpbnQgbik7CnZvaWQgd2luX3Nob3coV0lORE9XICp3aW4sIGNoYXIgKmxhYmVsLCBpbnQgbGFiZWxfY29sb3IpOwp2b2lkIHByaW50X2luX21pZGRsZShXSU5ET1cgKndpbiwgaW50IHN0YXJ0eSwgaW50IHN0YXJ0eCwgaW50IHdpZHRoLCBjaGFyICpzdHJpbmcsIGNodHlwZSBjb2xvcik7CgppbnQgbWFpbigpCnsJV0lORE9XICpteV93aW5zWzNdOwoJUEFORUwgICpteV9wYW5lbHNbM107CglQQU5FTCAgKnRvcDsKCWludCBjaDsKCgkvKiBJbml0aWFsaXplIGN1cnNlcyAqLwoJaW5pdHNjcigpOwoJc3RhcnRfY29sb3IoKTsKCWNicmVhaygpOwoJbm9lY2hvKCk7CglrZXlwYWQoc3Rkc2NyLCBUUlVFKTsKCgkvKiBJbml0aWFsaXplIGFsbCB0aGUgY29sb3JzICovCglpbml0X3BhaXIoMSwgQ09MT1JfUkVELCBDT0xPUl9CTEFDSyk7Cglpbml0X3BhaXIoMiwgQ09MT1JfR1JFRU4sIENPTE9SX0JMQUNLKTsKCWluaXRfcGFpcigzLCBDT0xPUl9CTFVFLCBDT0xPUl9CTEFDSyk7Cglpbml0X3BhaXIoNCwgQ09MT1JfQ1lBTiwgQ09MT1JfQkxBQ0spOwoKCWluaXRfd2lucyhteV93aW5zLCAzKTsKCQoJLyogQXR0YWNoIGEgcGFuZWwgdG8gZWFjaCB3aW5kb3cgKi8gCS8qIE9yZGVyIGlzIGJvdHRvbSB1cCAqLwoJbXlfcGFuZWxzWzBdID0gbmV3X3BhbmVsKG15X3dpbnNbMF0pOyAJLyogUHVzaCAwLCBvcmRlcjogc3Rkc2NyLTAgKi8KCW15X3BhbmVsc1sxXSA9IG5ld19wYW5lbChteV93aW5zWzFdKTsgCS8qIFB1c2ggMSwgb3JkZXI6IHN0ZHNjci0wLTEgKi8KCW15X3BhbmVsc1syXSA9IG5ld19wYW5lbChteV93aW5zWzJdKTsgCS8qIFB1c2ggMiwgb3JkZXI6IHN0ZHNjci0wLTEtMiAqLwoKCS8qIFNldCB1cCB0aGUgdXNlciBwb2ludGVycyB0byB0aGUgbmV4dCBwYW5lbCAqLwoJc2V0X3BhbmVsX3VzZXJwdHIobXlfcGFuZWxzWzBdLCBteV9wYW5lbHNbMV0pOwoJc2V0X3BhbmVsX3VzZXJwdHIobXlfcGFuZWxzWzFdLCBteV9wYW5lbHNbMl0pOwoJc2V0X3BhbmVsX3VzZXJwdHIobXlfcGFuZWxzWzJdLCBteV9wYW5lbHNbMF0pOwoKCS8qIFVwZGF0ZSB0aGUgc3RhY2tpbmcgb3JkZXIuIDJuZCBwYW5lbCB3aWxsIGJlIG9uIHRvcCAqLwoJdXBkYXRlX3BhbmVscygpOwoKCS8qIFNob3cgaXQgb24gdGhlIHNjcmVlbiAqLwoJYXR0cm9uKENPTE9SX1BBSVIoNCkpOwoJbXZwcmludHcoTElORVMgLSAyLCAwLCAiVXNlIHRhYiB0byBicm93c2UgdGhyb3VnaCB0aGUgd2luZG93cyAoRjEgdG8gRXhpdCkiKTsKCWF0dHJvZmYoQ09MT1JfUEFJUig0KSk7Cglkb3VwZGF0ZSgpOwoKCXRvcCA9IG15X3BhbmVsc1syXTsKCXdoaWxlKChjaCA9IGdldGNoKCkpICE9IEtFWV9GKDEpKQoJewlzd2l0Y2goY2gpCgkJewljYXNlIDk6CgkJCQl0b3AgPSAoUEFORUwgKilwYW5lbF91c2VycHRyKHRvcCk7CgkJCQl0b3BfcGFuZWwodG9wKTsKCQkJCWJyZWFrOwoJCX0KCQl1cGRhdGVfcGFuZWxzKCk7CgkJZG91cGRhdGUoKTsKCX0KCWVuZHdpbigpOwoJcmV0dXJuIDA7Cn0KCi8qIFB1dCBhbGwgdGhlIHdpbmRvd3MgKi8Kdm9pZCBpbml0X3dpbnMoV0lORE9XICoqd2lucywgaW50IG4pCnsJaW50IHgsIHksIGk7CgljaGFyIGxhYmVsWzgwXTsKCgljaGFyIHdpbm5hbWVbXVsxMl0gPSB7ICJTZXR0aW5ncyIsCgkJCSAgICJEZXNrdG9wIiwKCQkJICAgIkV4cGxvcmVyIgoJCQkgfTsKCXkgPSAyOwoJeCA9IDEwOwoJZm9yKGkgPSAwOyBpIDwgbjsgKytpKQoJewl3aW5zW2ldID0gbmV3d2luKE5MSU5FUywgTkNPTFMsIHksIHgpOwoJLy8Jc3ByaW50ZihsYWJlbCwgd2lubmFtZVtpXSwgaSArIDEpOwoJCXdpbl9zaG93KHdpbnNbaV0sIHdpbm5hbWVbaV0sIGkgKyAxKTsKCQl5ICs9IDM7CgkJeCArPSA3OwoJfQp9CgovKiBTaG93IHRoZSB3aW5kb3cgd2l0aCBhIGJvcmRlciBhbmQgYSBsYWJlbCAqLwp2b2lkIHdpbl9zaG93KFdJTkRPVyAqd2luLCBjaGFyICpsYWJlbCwgaW50IGxhYmVsX2NvbG9yKQp7CWludCBzdGFydHgsIHN0YXJ0eSwgaGVpZ2h0LCB3aWR0aDsKCglnZXRiZWd5eCh3aW4sIHN0YXJ0eSwgc3RhcnR4KTsKCWdldG1heHl4KHdpbiwgaGVpZ2h0LCB3aWR0aCk7CgoJYm94KHdpbiwgMCwgMCk7CgltdndhZGRjaCh3aW4sIDIsIDAsIEFDU19MVEVFKTsgCgltdndobGluZSh3aW4sIDIsIDEsIEFDU19ITElORSwgd2lkdGggLSAyKTsgCgltdndhZGRjaCh3aW4sIDIsIHdpZHRoIC0gMSwgQUNTX1JURUUpOyAKCQoJcHJpbnRfaW5fbWlkZGxlKHdpbiwgMSwgMCwgd2lkdGgsIGxhYmVsLCBDT0xPUl9QQUlSKGxhYmVsX2NvbG9yKSk7Cn0KCnZvaWQgcHJpbnRfaW5fbWlkZGxlKFdJTkRPVyAqd2luLCBpbnQgc3RhcnR5LCBpbnQgc3RhcnR4LCBpbnQgd2lkdGgsIGNoYXIgKnN0cmluZywgY2h0eXBlIGNvbG9yKQp7CWludCBsZW5ndGgsIHgsIHk7CglmbG9hdCB0ZW1wOwoKCWlmKHdpbiA9PSBOVUxMKQoJCXdpbiA9IHN0ZHNjcjsKCWdldHl4KHdpbiwgeSwgeCk7CglpZihzdGFydHggIT0gMCkKCQl4ID0gc3RhcnR4OwoJaWYoc3RhcnR5ICE9IDApCgkJeSA9IHN0YXJ0eTsKCWlmKHdpZHRoID09IDApCgkJd2lkdGggPSA4MDsKCglsZW5ndGggPSBzdHJsZW4oc3RyaW5nKTsKCXRlbXAgPSAod2lkdGggLSBsZW5ndGgpLyAyOwoJeCA9IHN0YXJ0eCArIChpbnQpdGVtcDsKCXdhdHRyb24od2luLCBjb2xvcik7CgltdndwcmludHcod2luLCB5LCB4LCAiJXMiLCBzdHJpbmcpOwoJd2F0dHJvZmYod2luLCBjb2xvcik7CglyZWZyZXNoKCk7Cn0K
